# Configuration file

actuallyadditions {
    # Set the EMC for the item 'Coffee Beans'  [range: -1 ~ 2147483647, default: 64]
    I:emc_item_item.actuallyadditions.item_coffee_beans=64

    # Set the EMC for the item 'Rice'  [range: -1 ~ 2147483647, default: 64]
    I:emc_item_item.actuallyadditions.item_food_rice=64

    # Set the EMC for the item 'Bat's Wing'  [range: -1 ~ 2147483647, default: 480]
    I:emc_item_item.actuallyadditions.item_misc_bat_wing=480

    # Set the EMC for the item 'Canola'  [range: -1 ~ 2147483647, default: 64]
    I:emc_item_item.actuallyadditions.item_misc_canola=64

    # Set the EMC for the item 'Solidified Experience'  [range: -1 ~ 2147483647, default: 863]
    I:emc_item_item.actuallyadditions.item_solidified_experience=863

    # Enable mapper for crusher? [default: true]
    B:enable_crusher_mapper=true

    # Enable mapper for Empowerer? [default: true]
    B:enable_empowerer_mapper=true

    # Enable mapper for Reconstructor? [default: true]
    B:enable_reconstructor_mapper=true
}


avaritia {
    # Set the EMC for the item 'Pile of Neutrons'  [range: -1 ~ 2147483647, default: 128]
    I:emc_item_item.resource.neutron_pile=128

    # Enable mapper for Compressor? [default: true]
    B:enable_compressor_mapper=true

    # Enable mapper for Extreme Crafting Table? [default: true]
    B:enable_extreme_crafting_table_mapper=true
}


chisel {
    # Enable mapper for Group('aluminum_scaffold')? [default: true]
    B:enable_group__aluminum_scaffold___mapper=true

    # Enable mapper for Group('andesite')? [default: true]
    B:enable_group__andesite___mapper=true

    # Enable mapper for Group('antiblock')? [default: true]
    B:enable_group__antiblock___mapper=true

    # Enable mapper for Group('basalt')? [default: true]
    B:enable_group__basalt___mapper=true

    # Enable mapper for Group('biotite')? [default: true]
    B:enable_group__biotite___mapper=true

    # Enable mapper for Group('block_coal_coke')? [default: true]
    B:enable_group__block_coal_coke___mapper=true

    # Enable mapper for Group('block_paper')? [default: true]
    B:enable_group__block_paper___mapper=true

    # Enable mapper for Group('blockAluminum')? [default: true]
    B:enable_group__blockaluminum___mapper=true

    # Enable mapper for Group('blockBronze')? [default: true]
    B:enable_group__blockbronze___mapper=true

    # Enable mapper for Group('blockCharcoal')? [default: true]
    B:enable_group__blockcharcoal___mapper=true

    # Enable mapper for Group('blockCoal')? [default: true]
    B:enable_group__blockcoal___mapper=true

    # Enable mapper for Group('blockCoalCoke')? [default: true]
    B:enable_group__blockcoalcoke___mapper=true

    # Enable mapper for Group('blockCobalt')? [default: true]
    B:enable_group__blockcobalt___mapper=true

    # Enable mapper for Group('blockCopper')? [default: true]
    B:enable_group__blockcopper___mapper=true

    # Enable mapper for Group('blockDiamond')? [default: true]
    B:enable_group__blockdiamond___mapper=true

    # Enable mapper for Group('blockElectrum')? [default: true]
    B:enable_group__blockelectrum___mapper=true

    # Enable mapper for Group('blockEmerald')? [default: true]
    B:enable_group__blockemerald___mapper=true

    # Enable mapper for Group('blockGold')? [default: true]
    B:enable_group__blockgold___mapper=true

    # Enable mapper for Group('blockInvar')? [default: true]
    B:enable_group__blockinvar___mapper=true

    # Enable mapper for Group('blockIron')? [default: true]
    B:enable_group__blockiron___mapper=true

    # Enable mapper for Group('blockLapis')? [default: true]
    B:enable_group__blocklapis___mapper=true

    # Enable mapper for Group('blockLead')? [default: true]
    B:enable_group__blocklead___mapper=true

    # Enable mapper for Group('blockNickel')? [default: true]
    B:enable_group__blocknickel___mapper=true

    # Enable mapper for Group('blockPlatinum')? [default: true]
    B:enable_group__blockplatinum___mapper=true

    # Enable mapper for Group('blockSilver')? [default: true]
    B:enable_group__blocksilver___mapper=true

    # Enable mapper for Group('blockSteel')? [default: true]
    B:enable_group__blocksteel___mapper=true

    # Enable mapper for Group('blockTin')? [default: true]
    B:enable_group__blocktin___mapper=true

    # Enable mapper for Group('blockUranium')? [default: true]
    B:enable_group__blockuranium___mapper=true

    # Enable mapper for Group('bookshelf_acacia')? [default: true]
    B:enable_group__bookshelf_acacia___mapper=true

    # Enable mapper for Group('bookshelf_birch')? [default: true]
    B:enable_group__bookshelf_birch___mapper=true

    # Enable mapper for Group('bookshelf_darkoak')? [default: true]
    B:enable_group__bookshelf_darkoak___mapper=true

    # Enable mapper for Group('bookshelf_jungle')? [default: true]
    B:enable_group__bookshelf_jungle___mapper=true

    # Enable mapper for Group('bookshelf_oak')? [default: true]
    B:enable_group__bookshelf_oak___mapper=true

    # Enable mapper for Group('bookshelf_spruce')? [default: true]
    B:enable_group__bookshelf_spruce___mapper=true

    # Enable mapper for Group('bricks')? [default: true]
    B:enable_group__bricks___mapper=true

    # Enable mapper for Group('brimstone')? [default: true]
    B:enable_group__brimstone___mapper=true

    # Enable mapper for Group('brownstone')? [default: true]
    B:enable_group__brownstone___mapper=true

    # Enable mapper for Group('carpet_black')? [default: true]
    B:enable_group__carpet_black___mapper=true

    # Enable mapper for Group('carpet_blue')? [default: true]
    B:enable_group__carpet_blue___mapper=true

    # Enable mapper for Group('carpet_brown')? [default: true]
    B:enable_group__carpet_brown___mapper=true

    # Enable mapper for Group('carpet_cyan')? [default: true]
    B:enable_group__carpet_cyan___mapper=true

    # Enable mapper for Group('carpet_gray')? [default: true]
    B:enable_group__carpet_gray___mapper=true

    # Enable mapper for Group('carpet_green')? [default: true]
    B:enable_group__carpet_green___mapper=true

    # Enable mapper for Group('carpet_lightblue')? [default: true]
    B:enable_group__carpet_lightblue___mapper=true

    # Enable mapper for Group('carpet_lightgray')? [default: true]
    B:enable_group__carpet_lightgray___mapper=true

    # Enable mapper for Group('carpet_lime')? [default: true]
    B:enable_group__carpet_lime___mapper=true

    # Enable mapper for Group('carpet_magenta')? [default: true]
    B:enable_group__carpet_magenta___mapper=true

    # Enable mapper for Group('carpet_orange')? [default: true]
    B:enable_group__carpet_orange___mapper=true

    # Enable mapper for Group('carpet_pink')? [default: true]
    B:enable_group__carpet_pink___mapper=true

    # Enable mapper for Group('carpet_purple')? [default: true]
    B:enable_group__carpet_purple___mapper=true

    # Enable mapper for Group('carpet_red')? [default: true]
    B:enable_group__carpet_red___mapper=true

    # Enable mapper for Group('carpet_white')? [default: true]
    B:enable_group__carpet_white___mapper=true

    # Enable mapper for Group('carpet_yellow')? [default: true]
    B:enable_group__carpet_yellow___mapper=true

    # Enable mapper for Group('cloud')? [default: true]
    B:enable_group__cloud___mapper=true

    # Enable mapper for Group('cobblestone')? [default: true]
    B:enable_group__cobblestone___mapper=true

    # Enable mapper for Group('cobblestonemossy')? [default: true]
    B:enable_group__cobblestonemossy___mapper=true

    # Enable mapper for Group('concrete_black')? [default: true]
    B:enable_group__concrete_black___mapper=true

    # Enable mapper for Group('concrete_blue')? [default: true]
    B:enable_group__concrete_blue___mapper=true

    # Enable mapper for Group('concrete_brown')? [default: true]
    B:enable_group__concrete_brown___mapper=true

    # Enable mapper for Group('concrete_cyan')? [default: true]
    B:enable_group__concrete_cyan___mapper=true

    # Enable mapper for Group('concrete_gray')? [default: true]
    B:enable_group__concrete_gray___mapper=true

    # Enable mapper for Group('concrete_green')? [default: true]
    B:enable_group__concrete_green___mapper=true

    # Enable mapper for Group('concrete_lightblue')? [default: true]
    B:enable_group__concrete_lightblue___mapper=true

    # Enable mapper for Group('concrete_lightgray')? [default: true]
    B:enable_group__concrete_lightgray___mapper=true

    # Enable mapper for Group('concrete_lime')? [default: true]
    B:enable_group__concrete_lime___mapper=true

    # Enable mapper for Group('concrete_magenta')? [default: true]
    B:enable_group__concrete_magenta___mapper=true

    # Enable mapper for Group('concrete_orange')? [default: true]
    B:enable_group__concrete_orange___mapper=true

    # Enable mapper for Group('concrete_pink')? [default: true]
    B:enable_group__concrete_pink___mapper=true

    # Enable mapper for Group('concrete_purple')? [default: true]
    B:enable_group__concrete_purple___mapper=true

    # Enable mapper for Group('concrete_red')? [default: true]
    B:enable_group__concrete_red___mapper=true

    # Enable mapper for Group('concrete_white')? [default: true]
    B:enable_group__concrete_white___mapper=true

    # Enable mapper for Group('concrete_yellow')? [default: true]
    B:enable_group__concrete_yellow___mapper=true

    # Enable mapper for Group('diorite')? [default: true]
    B:enable_group__diorite___mapper=true

    # Enable mapper for Group('dirt')? [default: true]
    B:enable_group__dirt___mapper=true

    # Enable mapper for Group('endstone')? [default: true]
    B:enable_group__endstone___mapper=true

    # Enable mapper for Group('factory')? [default: true]
    B:enable_group__factory___mapper=true

    # Enable mapper for Group('futura')? [default: true]
    B:enable_group__futura___mapper=true

    # Enable mapper for Group('glass')? [default: true]
    B:enable_group__glass___mapper=true

    # Enable mapper for Group('glassdyedblack')? [default: true]
    B:enable_group__glassdyedblack___mapper=true

    # Enable mapper for Group('glassdyedblue')? [default: true]
    B:enable_group__glassdyedblue___mapper=true

    # Enable mapper for Group('glassdyedbrown')? [default: true]
    B:enable_group__glassdyedbrown___mapper=true

    # Enable mapper for Group('glassdyedcyan')? [default: true]
    B:enable_group__glassdyedcyan___mapper=true

    # Enable mapper for Group('glassdyedgray')? [default: true]
    B:enable_group__glassdyedgray___mapper=true

    # Enable mapper for Group('glassdyedgreen')? [default: true]
    B:enable_group__glassdyedgreen___mapper=true

    # Enable mapper for Group('glassdyedlightblue')? [default: true]
    B:enable_group__glassdyedlightblue___mapper=true

    # Enable mapper for Group('glassdyedlightgray')? [default: true]
    B:enable_group__glassdyedlightgray___mapper=true

    # Enable mapper for Group('glassdyedlime')? [default: true]
    B:enable_group__glassdyedlime___mapper=true

    # Enable mapper for Group('glassdyedmagenta')? [default: true]
    B:enable_group__glassdyedmagenta___mapper=true

    # Enable mapper for Group('glassdyedorange')? [default: true]
    B:enable_group__glassdyedorange___mapper=true

    # Enable mapper for Group('glassdyedpink')? [default: true]
    B:enable_group__glassdyedpink___mapper=true

    # Enable mapper for Group('glassdyedpurple')? [default: true]
    B:enable_group__glassdyedpurple___mapper=true

    # Enable mapper for Group('glassdyedred')? [default: true]
    B:enable_group__glassdyedred___mapper=true

    # Enable mapper for Group('glassdyedwhite')? [default: true]
    B:enable_group__glassdyedwhite___mapper=true

    # Enable mapper for Group('glassdyedyellow')? [default: true]
    B:enable_group__glassdyedyellow___mapper=true

    # Enable mapper for Group('glasspane')? [default: true]
    B:enable_group__glasspane___mapper=true

    # Enable mapper for Group('glasspanedyedblack')? [default: true]
    B:enable_group__glasspanedyedblack___mapper=true

    # Enable mapper for Group('glasspanedyedblue')? [default: true]
    B:enable_group__glasspanedyedblue___mapper=true

    # Enable mapper for Group('glasspanedyedbrown')? [default: true]
    B:enable_group__glasspanedyedbrown___mapper=true

    # Enable mapper for Group('glasspanedyedcyan')? [default: true]
    B:enable_group__glasspanedyedcyan___mapper=true

    # Enable mapper for Group('glasspanedyedgray')? [default: true]
    B:enable_group__glasspanedyedgray___mapper=true

    # Enable mapper for Group('glasspanedyedgreen')? [default: true]
    B:enable_group__glasspanedyedgreen___mapper=true

    # Enable mapper for Group('glasspanedyedlightblue')? [default: true]
    B:enable_group__glasspanedyedlightblue___mapper=true

    # Enable mapper for Group('glasspanedyedlightgray')? [default: true]
    B:enable_group__glasspanedyedlightgray___mapper=true

    # Enable mapper for Group('glasspanedyedlime')? [default: true]
    B:enable_group__glasspanedyedlime___mapper=true

    # Enable mapper for Group('glasspanedyedmagenta')? [default: true]
    B:enable_group__glasspanedyedmagenta___mapper=true

    # Enable mapper for Group('glasspanedyedorange')? [default: true]
    B:enable_group__glasspanedyedorange___mapper=true

    # Enable mapper for Group('glasspanedyedpink')? [default: true]
    B:enable_group__glasspanedyedpink___mapper=true

    # Enable mapper for Group('glasspanedyedpurple')? [default: true]
    B:enable_group__glasspanedyedpurple___mapper=true

    # Enable mapper for Group('glasspanedyedred')? [default: true]
    B:enable_group__glasspanedyedred___mapper=true

    # Enable mapper for Group('glasspanedyedwhite')? [default: true]
    B:enable_group__glasspanedyedwhite___mapper=true

    # Enable mapper for Group('glasspanedyedyellow')? [default: true]
    B:enable_group__glasspanedyedyellow___mapper=true

    # Enable mapper for Group('glowstone')? [default: true]
    B:enable_group__glowstone___mapper=true

    # Enable mapper for Group('granite')? [default: true]
    B:enable_group__granite___mapper=true

    # Enable mapper for Group('hardenedclay')? [default: true]
    B:enable_group__hardenedclay___mapper=true

    # Enable mapper for Group('hardenedclaydyed_black')? [default: true]
    B:enable_group__hardenedclaydyed_black___mapper=true

    # Enable mapper for Group('hardenedclaydyed_blue')? [default: true]
    B:enable_group__hardenedclaydyed_blue___mapper=true

    # Enable mapper for Group('hardenedclaydyed_brown')? [default: true]
    B:enable_group__hardenedclaydyed_brown___mapper=true

    # Enable mapper for Group('hardenedclaydyed_cyan')? [default: true]
    B:enable_group__hardenedclaydyed_cyan___mapper=true

    # Enable mapper for Group('hardenedclaydyed_gray')? [default: true]
    B:enable_group__hardenedclaydyed_gray___mapper=true

    # Enable mapper for Group('hardenedclaydyed_green')? [default: true]
    B:enable_group__hardenedclaydyed_green___mapper=true

    # Enable mapper for Group('hardenedclaydyed_light_blue')? [default: true]
    B:enable_group__hardenedclaydyed_light_blue___mapper=true

    # Enable mapper for Group('hardenedclaydyed_lime')? [default: true]
    B:enable_group__hardenedclaydyed_lime___mapper=true

    # Enable mapper for Group('hardenedclaydyed_magenta')? [default: true]
    B:enable_group__hardenedclaydyed_magenta___mapper=true

    # Enable mapper for Group('hardenedclaydyed_orange')? [default: true]
    B:enable_group__hardenedclaydyed_orange___mapper=true

    # Enable mapper for Group('hardenedclaydyed_pink')? [default: true]
    B:enable_group__hardenedclaydyed_pink___mapper=true

    # Enable mapper for Group('hardenedclaydyed_purple')? [default: true]
    B:enable_group__hardenedclaydyed_purple___mapper=true

    # Enable mapper for Group('hardenedclaydyed_red')? [default: true]
    B:enable_group__hardenedclaydyed_red___mapper=true

    # Enable mapper for Group('hardenedclaydyed_silver')? [default: true]
    B:enable_group__hardenedclaydyed_silver___mapper=true

    # Enable mapper for Group('hardenedclaydyed_white')? [default: true]
    B:enable_group__hardenedclaydyed_white___mapper=true

    # Enable mapper for Group('hardenedclaydyed_yellow')? [default: true]
    B:enable_group__hardenedclaydyed_yellow___mapper=true

    # Enable mapper for Group('ice')? [default: true]
    B:enable_group__ice___mapper=true

    # Enable mapper for Group('ironpane')? [default: true]
    B:enable_group__ironpane___mapper=true

    # Enable mapper for Group('jasper')? [default: true]
    B:enable_group__jasper___mapper=true

    # Enable mapper for Group('laboratory')? [default: true]
    B:enable_group__laboratory___mapper=true

    # Enable mapper for Group('lavastone')? [default: true]
    B:enable_group__lavastone___mapper=true

    # Enable mapper for Group('limestone')? [default: true]
    B:enable_group__limestone___mapper=true

    # Enable mapper for Group('marble')? [default: true]
    B:enable_group__marble___mapper=true

    # Enable mapper for Group('midori')? [default: true]
    B:enable_group__midori___mapper=true

    # Enable mapper for Group('netherbrick')? [default: true]
    B:enable_group__netherbrick___mapper=true

    # Enable mapper for Group('netherrack')? [default: true]
    B:enable_group__netherrack___mapper=true

    # Enable mapper for Group('obsidian')? [default: true]
    B:enable_group__obsidian___mapper=true

    # Enable mapper for Group('paper')? [default: true]
    B:enable_group__paper___mapper=true

    # Enable mapper for Group('permafrost')? [default: true]
    B:enable_group__permafrost___mapper=true

    # Enable mapper for Group('planks-acacia')? [default: true]
    B:enable_group__planks_acacia___mapper=true

    # Enable mapper for Group('planks-birch')? [default: true]
    B:enable_group__planks_birch___mapper=true

    # Enable mapper for Group('planks-dark-oak')? [default: true]
    B:enable_group__planks_dark_oak___mapper=true

    # Enable mapper for Group('planks-jungle')? [default: true]
    B:enable_group__planks_jungle___mapper=true

    # Enable mapper for Group('planks-oak')? [default: true]
    B:enable_group__planks_oak___mapper=true

    # Enable mapper for Group('planks-spruce')? [default: true]
    B:enable_group__planks_spruce___mapper=true

    # Enable mapper for Group('prismarine')? [default: true]
    B:enable_group__prismarine___mapper=true

    # Enable mapper for Group('purpur')? [default: true]
    B:enable_group__purpur___mapper=true

    # Enable mapper for Group('quartz')? [default: true]
    B:enable_group__quartz___mapper=true

    # Enable mapper for Group('redstone')? [default: true]
    B:enable_group__redstone___mapper=true

    # Enable mapper for Group('reinforced_concrete')? [default: true]
    B:enable_group__reinforced_concrete___mapper=true

    # Enable mapper for Group('sandstone')? [default: true]
    B:enable_group__sandstone___mapper=true

    # Enable mapper for Group('sandstonered')? [default: true]
    B:enable_group__sandstonered___mapper=true

    # Enable mapper for Group('sandstonesoul')? [default: true]
    B:enable_group__sandstonesoul___mapper=true

    # Enable mapper for Group('sandstonewhite')? [default: true]
    B:enable_group__sandstonewhite___mapper=true

    # Enable mapper for Group('sandstoneyellow')? [default: true]
    B:enable_group__sandstoneyellow___mapper=true

    # Enable mapper for Group('slate')? [default: true]
    B:enable_group__slate___mapper=true

    # Enable mapper for Group('steel_scaffold')? [default: true]
    B:enable_group__steel_scaffold___mapper=true

    # Enable mapper for Group('stonebrick')? [default: true]
    B:enable_group__stonebrick___mapper=true

    # Enable mapper for Group('techguns:camonet')? [default: true]
    B:enable_group__techguns_camonet___mapper=true

    # Enable mapper for Group('techguns:camonettop')? [default: true]
    B:enable_group__techguns_camonettop___mapper=true

    # Enable mapper for Group('techguns:metalladder')? [default: true]
    B:enable_group__techguns_metalladder___mapper=true

    # Enable mapper for Group('techguns:metalpanel')? [default: true]
    B:enable_group__techguns_metalpanel___mapper=true

    # Enable mapper for Group('techguns:neonlights')? [default: true]
    B:enable_group__techguns_neonlights___mapper=true

    # Enable mapper for Group('temple')? [default: true]
    B:enable_group__temple___mapper=true

    # Enable mapper for Group('treated_wood')? [default: true]
    B:enable_group__treated_wood___mapper=true

    # Enable mapper for Group('tyrian')? [default: true]
    B:enable_group__tyrian___mapper=true

    # Enable mapper for Group('valentines')? [default: true]
    B:enable_group__valentines___mapper=true

    # Enable mapper for Group('voidstone')? [default: true]
    B:enable_group__voidstone___mapper=false

    # Enable mapper for Group('waterstone')? [default: true]
    B:enable_group__waterstone___mapper=true

    # Enable mapper for Group('wool_black')? [default: true]
    B:enable_group__wool_black___mapper=true

    # Enable mapper for Group('wool_blue')? [default: true]
    B:enable_group__wool_blue___mapper=true

    # Enable mapper for Group('wool_brown')? [default: true]
    B:enable_group__wool_brown___mapper=true

    # Enable mapper for Group('wool_cyan')? [default: true]
    B:enable_group__wool_cyan___mapper=true

    # Enable mapper for Group('wool_gray')? [default: true]
    B:enable_group__wool_gray___mapper=true

    # Enable mapper for Group('wool_green')? [default: true]
    B:enable_group__wool_green___mapper=true

    # Enable mapper for Group('wool_lightblue')? [default: true]
    B:enable_group__wool_lightblue___mapper=true

    # Enable mapper for Group('wool_lightgray')? [default: true]
    B:enable_group__wool_lightgray___mapper=true

    # Enable mapper for Group('wool_lime')? [default: true]
    B:enable_group__wool_lime___mapper=true

    # Enable mapper for Group('wool_magenta')? [default: true]
    B:enable_group__wool_magenta___mapper=true

    # Enable mapper for Group('wool_orange')? [default: true]
    B:enable_group__wool_orange___mapper=true

    # Enable mapper for Group('wool_pink')? [default: true]
    B:enable_group__wool_pink___mapper=true

    # Enable mapper for Group('wool_purple')? [default: true]
    B:enable_group__wool_purple___mapper=true

    # Enable mapper for Group('wool_red')? [default: true]
    B:enable_group__wool_red___mapper=true

    # Enable mapper for Group('wool_white')? [default: true]
    B:enable_group__wool_white___mapper=true

    # Enable mapper for Group('wool_yellow')? [default: true]
    B:enable_group__wool_yellow___mapper=true
}


compactmachines3 {
    # Enable mapper for Miniaturization? [default: true]
    B:enable_miniaturization_mapper=true
}


draconicevolution {
    # Set the EMC for the item 'Chaos Shard'  [range: -1 ~ 2147483647, default: 1024000]
    I:"emc_item_item.draconicevolution:chaos_shard.shard"=1024000

    # Set the EMC for the item 'Draconium Dust'  [range: -1 ~ 2147483647, default: 8192]
    I:"emc_item_item.draconicevolution:draconium_dust"=8192

    # Set the EMC for the item '§6Dragon Heart'  [range: -1 ~ 2147483647, default: 262144]
    I:"emc_item_item.draconicevolution:dragon_heart"=262144

    # Enable mapper for Draconic Evolution Fusion Crafting? [default: true]
    B:enable_fusion_mapper=false
}


enderio {
    # Set the EMC for the item 'Twigs and Prunings'  [range: -1 ~ 2147483647, default: 1]
    I:emc_item_item.item_material.plantbrown=1

    # Set the EMC for the item 'Clippings and Trimmings'  [range: -1 ~ 2147483647, default: 1]
    I:emc_item_item.item_material.plantgreen=1

    # Set the EMC for the item 'Grains of Infinity'  [range: -1 ~ 2147483647, default: 32]
    I:emc_item_item.item_material.powder_infinity=32

    # EMC for techguns:alienbug [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_alienbug=0

    # EMC for quark:archaeologist [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_archaeologist=0

    # EMC for illagers_plus:archer [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_archer=0

    # EMC for techguns:armysoldier [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_armysoldier=0

    # EMC for quark:ashen [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ashen=0

    # EMC for techguns:attackhelicopter [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_attackhelicopter=0

    # EMC for techguns:bandit [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bandit=0

    # EMC for thermalfoundation:basalz [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_basalz=0

    # EMC for minecraft:bat [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bat=0

    # EMC for futuremc:bee [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bee=0

    # EMC for better_diving:bladderfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_bladderfish=0

    # EMC for minecraft:blaze [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blaze=0

    # EMC for thermalfoundation:blitz [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blitz=0

    # EMC for thermalfoundation:blizz [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_blizz=0

    # EMC for better_diving:boomerang [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_boomerang=0

    # EMC for minecraft:cave_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cave_spider=0

    # EMC for draconicevolution:chaosguardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_chaosguardian=0

    # EMC for minecraft:chicken [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_chicken=0

    # EMC for futuremc:cod [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cod=0

    # EMC for techguns:commando [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_commando=0

    # EMC for enderiozoo:concussioncreeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_concussioncreeper=0

    # EMC for minecraft:cow [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cow=0

    # EMC for quark:crab [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_crab=0

    # EMC for minecraft:creeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_creeper=0

    # EMC for techguns:cyberdemon [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_cyberdemon=0

    # EMC for techguns:dictatordave [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_dictatordave=0

    # EMC for enderiozoo:direslime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_direslime=0

    # EMC for enderiozoo:direwolf [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_direwolf=0

    # EMC for minecraft:donkey [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_donkey=0

    # EMC for quark:dweller [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_dweller=0

    # EMC for minecraft:elder_guardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_elder_guardian=0

    # EMC for illagers_plus:enchanter [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_enchanter=0

    # EMC for minecraft:ender_dragon [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ender_dragon=0

    # EMC for minecraft:enderman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_enderman=0

    # EMC for enderiozoo:enderminy [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_enderminy=0

    # EMC for minecraft:endermite [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_endermite=0

    # EMC for enderiozoo:epicsquid [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_epicsquid=0

    # EMC for minecraft:evocation_illager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_evocation_illager=0

    # EMC for enderiozoo:fallenknight [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_fallenknight=0

    # EMC for enderiozoo:fallenmount [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_fallenmount=0

    # EMC for quark:foxhound [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_foxhound=0

    # EMC for quark:frog [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_frog=0

    # EMC for illagers_plus:furantur [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_furantur=0

    # EMC for better_diving:garryfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_garryfish=0

    # EMC for minecraft:ghast [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ghast=0

    # EMC for techguns:ghastling [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ghastling=0

    # EMC for minecraft:giant [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_giant=0

    # EMC for deepmoblearning:glitch [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_glitch=0

    # EMC for randomthings:goldenchicken [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_goldenchicken=0

    # EMC for minecraft:guardian [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_guardian=0

    # EMC for illagers_plus:hoarder [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_hoarder=0

    # EMC for better_diving:holefish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_holefish=0

    # EMC for minecraft:horse [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_horse=0

    # EMC for minecraft:husk [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_husk=0

    # EMC for illagers_plus:illager_king [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_illager_king=0

    # EMC for minecraft:illusion_illager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_illusion_illager=0

    # EMC for quark:leash_knot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_leash_knot=0

    # EMC for minecraft:llama [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_llama=0

    # EMC for enderiozoo:lovechild [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_lovechild=0

    # EMC for minecraft:magma_cube [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_magma_cube=0

    # EMC for farmingforblockheads:merchant [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_merchant=0

    # EMC for artifacts:mimic [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mimic=0

    # EMC for minecraft:mooshroom [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mooshroom=0

    # EMC for minecraft:mule [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_mule=0

    # EMC for illagers_plus:necromancer [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_necromancer=0

    # EMC for minecraft:ocelot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_ocelot=0

    # EMC for techguns:outcast [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_outcast=0

    # EMC for enderiozoo:owl [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_owl=0

    # EMC for futuremc:panda [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_panda=0

    # EMC for minecraft:parrot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_parrot=0

    # EMC for better_diving:peeper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_peeper=0

    # EMC for minecraft:pig [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pig=0

    # EMC for industrialforegoing:pink_slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pink_slime=0

    # EMC for quark:pirate [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pirate=0

    # EMC for minecraft:polar_bear [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_polar_bear=0

    # EMC for techguns:psychosteve [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_psychosteve=0

    # EMC for futuremc:pufferfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_pufferfish=0

    # EMC for minecraft:rabbit [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_rabbit=0

    # EMC for cyclicmagic:robot [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_robot=0

    # EMC for futuremc:salmon [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_salmon=0

    # EMC for minecraft:sheep [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_sheep=0

    # EMC for minecraft:shulker [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_shulker=0

    # EMC for minecraft:silverfish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_silverfish=0

    # EMC for minecraft:skeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_skeleton=0

    # EMC for minecraft:skeleton_horse [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_skeleton_horse=0

    # EMC for techguns:skeletonsoldier [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_skeletonsoldier=0

    # EMC for minecraft:slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_slime=0

    # EMC for minecraft:snowman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_snowman=0

    # EMC for minecraft:spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_spider=0

    # EMC for randomthings:spirit [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_spirit=0

    # EMC for minecraft:squid [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_squid=0

    # EMC for quark:stoneling [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_stoneling=0

    # EMC for techguns:stormtrooper [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_stormtrooper=0

    # EMC for minecraft:stray [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_stray=0

    # EMC for techguns:supermutantbasic [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_supermutantbasic=0

    # EMC for techguns:supermutantelite [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_supermutantelite=0

    # EMC for techguns:supermutantheavy [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_supermutantheavy=0

    # EMC for techguns:tgdummyspawn [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_tgdummyspawn=0

    # EMC for deepmoblearning:trial_cave_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_cave_spider=0

    # EMC for deepmoblearning:trial_enderman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_enderman=0

    # EMC for deepmoblearning:trial_slime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_slime=0

    # EMC for deepmoblearning:trial_spider [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_trial_spider=0

    # EMC for futuremc:tropical_fish [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_tropical_fish=0

    # EMC for techguns:turret [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_turret=0

    # EMC for minecraft:vex [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vex=0

    # EMC for minecraft:villager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_villager=0

    # EMC for minecraft:villager_golem [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_villager_golem=0

    # EMC for minecraft:vindication_illager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_vindication_illager=0

    # EMC for enderiozoo:voidslime [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_voidslime=0

    # EMC for biomesoplenty:wasp [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wasp=0

    # EMC for minecraft:witch [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_witch=0

    # EMC for minecraft:wither [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wither=0

    # EMC for minecraft:wither_skeleton [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wither_skeleton=0

    # EMC for enderiozoo:withercat [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_withercat=0

    # EMC for enderiozoo:witherwitch [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_witherwitch=0

    # EMC for minecraft:wolf [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wolf=0

    # EMC for quark:wraith [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_wraith=0

    # EMC for minecraft:zombie [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie=0

    # EMC for minecraft:zombie_horse [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie_horse=0

    # EMC for minecraft:zombie_pigman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie_pigman=0

    # EMC for minecraft:zombie_villager [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombie_villager=0

    # EMC for techguns:zombiefarmer [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombiefarmer=0

    # EMC for techguns:zombieminer [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombieminer=0

    # EMC for techguns:zombiepigmansoldier [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombiepigmansoldier=0

    # EMC for techguns:zombiepoliceman [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombiepoliceman=0

    # EMC for techguns:zombiesoldier [range: 0 ~ 2147483647, default: 0]
    I:emc_soul_zombiesoldier=0

    # Enable mapper for Alloy Smelter? [default: true]
    B:enable_alloy_smelter_mapper=true

    # Enable mapper for Sag Mill? [default: true]
    B:enable_sag_mill_mapper=true

    # Enable mapper for Slice And Splice? [default: true]
    B:enable_slice_and_splice_mapper=true

    # Enable mapper for Soul Binder? [default: true]
    B:enable_soul_binder_mapper=true

    # Enable mapper for Vat? [default: true]
    B:enable_vat_mapper=true
}


extendedcrafting {
    # Enable mapper for Combination? [default: true]
    B:enable_combination_mapper=true

    # Enable mapper for Compressor? [default: true]
    B:enable_compressor_mapper=false

    # Enable mapper for Ender Table? [default: true]
    B:enable_ender_table_mapper=true

    # Enable mapper for Table? [default: true]
    B:enable_table_mapper=true
}


extrautils2 {
    # Enable mapper for extrautils2:crusher? [default: true]
    B:enable_extrautils2_crusher_mapper=true

    # Enable mapper for extrautils2:enchanter? [default: true]
    B:enable_extrautils2_enchanter_mapper=true

    # Enable mapper for Resonator? [default: true]
    B:enable_resonator_mapper=true
}


general {
    # Enable debugging mode [default: false]
    B:debug=false

    # Disable the mod outright? Why download it though? [default: false]
    B:disable=false

    # Display message in chat about any failed plugins/mappers [default: true]
    B:error_check=true

    # Display message in chat about any updates [default: true]
    B:update_check=true
}


immersiveengineering {
    # Should the EMC be split up with the slag in the Blast Furnace [default: true]
    B:blast_furnace_ignore_slag=true

    # Should the EMC be split up with the creosote in the Coke Oven [default: true]
    B:coke_oven_ignore_creosote=true

    # Enable mapper for Blast Furnace? [default: true]
    B:enable_blast_furnace_mapper=true

    # Enable mapper for Coke Oven? [default: true]
    B:enable_coke_oven_mapper=true

    # Enable mapper for Crusher? [default: true]
    B:enable_crusher_mapper=true

    # Enable mapper for Engineer Workbench? [default: true]
    B:enable_engineer_workbench_mapper=true

    # Enable mapper for Fermenter? [default: true]
    B:enable_fermenter_mapper=true

    # Enable mapper for Kiln? [default: true]
    B:enable_kiln_mapper=true

    # Enable mapper for Metal Press? [default: true]
    B:enable_metal_press_mapper=true

    # Enable mapper for Mixer? [default: true]
    B:enable_mixer_mapper=true

    # Enable mapper for Refinery? [default: true]
    B:enable_refinery_mapper=false

    # Enable mapper for Squeezer? [default: true]
    B:enable_squeezer_mapper=true
}


libvulpes {
    B:enable_blocksmallplatepress_mapper=true
    B:enable_tilecentrifuge_mapper=true
    B:enable_tilechemicalreactor_mapper=true
    B:enable_tilecrystallizer_mapper=true
    B:enable_tilecuttingmachine_mapper=true
    B:enable_tileelectricarcfurnace_mapper=true
    B:enable_tileelectrolyser_mapper=true
    B:enable_tilelathe_mapper=true
    B:enable_tileprecisionassembler_mapper=true
    B:enable_tileprecisionlaseretcher_mapper=true
    B:enable_tilerollingmachine_mapper=true
}


modularmachinery {
    # Enable mapper for Advanced Cryotheum Cooler? [default: true]
    B:enable_advanced_cryotheum_cooler_mapper=true

    # Enable mapper for Advanced Fusion Reactor? [default: true]
    B:enable_advanced_fusion_reactor_mapper=true

    # Enable mapper for Advanced Matter Extractor? [default: true]
    B:enable_advanced_matter_extractor_mapper=true

    # Enable mapper for Advanced Metal Alloyer? [default: true]
    B:enable_advanced_metal_alloyer_mapper=true

    # Enable mapper for Advanced Ore Crusher? [default: true]
    B:enable_advanced_ore_crusher_mapper=true

    # Enable mapper for Advanced Primal Centrifuge? [default: true]
    B:enable_advanced_primal_centrifuge_mapper=true

    # Enable mapper for Advanced Pyrotheum Smelter? [default: true]
    B:enable_advanced_pyrotheum_smelter_mapper=true
    B:enable_alloy_smelter_mapper=true
    B:enable_artificial_end_portal_mapper=true
    B:enable_fabricator_multiblock_requirements_mapper=true
    B:enable_fission_multiblock_requirements_mapper=true
    B:enable_fusion_multiblock_requirements_mapper=true
    B:enable_immersive_engineering_multiblock_requirements_mapper=true
    B:enable_iron_reinforced_centrifuge_mapper=true
    B:enable_modular_machinery_multiblock_requirements_mapper=true

    # Enable mapper for Multiblock Requirements? [default: true]
    B:enable_multiblock_requirements_mapper=true
    B:enable_power_transformer_mapper=true
    B:enable_reaction_chamber_multiblock_requirements_mapper=true
    B:"enable_§bassembly_line_mapper"=true
}


mysticalagriculture {
    # Enable mapper for Seed Processor? [default: true]
    B:enable_seed_processor_mapper=false
}


plugins {

    extrautils2 {
        # Enable the plugin [default: true]
        B:enable=true
    }

    enderio {
        # Enable the plugin [default: true]
        B:enable=true
    }

    chisel {
        # Enable the plugin [default: true]
        B:enable=true
    }

    reborncore {
        # Enable the plugin [default: true]
        B:enable=true
    }

    mysticalagriculture {
        # Enable the plugin [default: true]
        B:enable=true
    }

    draconicevolution {
        # Enable the plugin [default: true]
        B:enable=true
    }

    immersiveengineering {
        # Enable the plugin [default: true]
        B:enable=true
    }

    compactmachines3 {
        # Enable the plugin [default: true]
        B:enable=true
    }

    actuallyadditions {
        # Enable the plugin [default: true]
        B:enable=true
    }

    modularmachinery {
        # Enable the plugin [default: true]
        B:enable=true
    }

    extendedcrafting {
        # Enable the plugin [default: true]
        B:enable=true
    }

    thermalexpansion {
        # Enable the plugin [default: true]
        B:enable=true
    }

    avaritia {
        # Enable the plugin [default: true]
        B:enable=true
    }

    libvulpes {
        B:enable=true
    }

    advancedrocketry {
        B:enable=true
    }

}


reborncore {
    # Enable mapper for Reborn Core? [default: true]
    B:enable_reborn_core_mapper=true
}


thermalexpansion {
    # Enable mapper for Brewer? [default: true]
    B:enable_brewer_mapper=true

    # Enable mapper for Centrifuge? [default: true]
    B:enable_centrifuge_mapper=true

    # Enable mapper for Charger? [default: true]
    B:enable_charger_mapper=true

    # Enable mapper for Compactor? [default: true]
    B:enable_compactor_mapper=true

    # Enable mapper for Crucible? [default: true]
    B:enable_crucible_mapper=true

    # Enable mapper for Enchanter? [default: true]
    B:enable_enchanter_mapper=true

    # Enable mapper for Extruder? [default: true]
    B:enable_extruder_mapper=true

    # Enable mapper for Furnace? [default: true]
    B:enable_furnace_mapper=true

    # Enable mapper for Insolator? [default: true]
    B:enable_insolator_mapper=true

    # Enable mapper for Precipitator? [default: true]
    B:enable_precipitator_mapper=true

    # Enable mapper for Pulverizer? [default: true]
    B:enable_pulverizer_mapper=true

    # Enable mapper for Refinery? [default: true]
    B:enable_refinery_mapper=true

    # Enable mapper for Sawmill? [default: true]
    B:enable_sawmill_mapper=true

    # Enable mapper for Smelter? [default: true]
    B:enable_smelter_mapper=true

    # Enable mapper for Transposer? [default: true]
    B:enable_transposer_mapper=true
}


